---
title: "Fortunes"
author: "lvaudor"
format: html
editor: visual
project:
  type: website
  output-dir: docs
execute:
  cache: true
---

```{r setup}
library(tidyverse)
library(glitter)
```

# Construction de la requête Wikidata

## A partir des propriétés de l'item "Amazon"

On s'inspire des données renseignées pour l'item Amazon pour identifier les descripteurs qui nous intéressent...

```{r explore_Amazon}
WikidataR::find_item("Amazon")
Amazon_claims=glitter::get_claims("wd:Q3884")
```

L'item doit être de type (P31)

-   Q4830453 business

-   Q6881511 enterprise

    Les **propriétés** qui peuvent nous intéresser:

-   P2137 total equity

-   P2139 total revenue

-   P2295 net profit

-   P2403 total assets

-   P3362 operating income

-   P159 headquarters location

-   P154 logo image

-   P17 country

## Formulation et envoi de la requête

```{r query}
tib_fortunes=spq_init() %>% 
  #entreprise a pour revenu ?total_revenue
  spq_add("?enterprise p:P2139 ?r", .label="?enterprise") %>%
  spq_add("?r ps:P2139 ?total_revenue") %>% 
  #total_revenue vaut pour la date ?total_revenue_date
  spq_add("?r pq:P585 ?total_revenue_date") %>% 
  #entreprise a pour profit net ?net_profit
  spq_add("?enterprise wdt:P2295 ?net_profit", .required=FALSE) %>% 
  #?entreprise a pour actifs totaux ?total_assets
  spq_add("?enterprise wdt:P2403 ?total_assets", .required=FALSE) %>%
  #?entreprise a pour résultat d'exploitation ?operating_income
  spq_add("?enterprise wdt:P3362 ?operating_income", .required=FALSE) %>% 
  #?entreprise a pour pays ?country
  spq_add("?enterprise wdt:P17 ?country", .label="?country",) %>% 
  #?entreprise est de type "business" ou "enterprise"
  spq_filter(enterprise==wdt::P31(types)) %>%
  spq_set(types = c("wd:Q4830453","wd:Q6881511")) %>% 
  #?entreprise est localisée à ?headquarters 
  spq_add("?enterprise wdt:P159 ?headquarters",
          .label="?headquarters",.required=FALSE) %>% 
  #?enterprise a pour coordonnées géographiques ?enterprise_loc
  spq_add("?enterprise wdt:P625 ?enterprise_loc",.required=FALSE) %>%  
  spq_perform()

dim(tib_fortunes)

```

## Rajoute les localisations des headquarters si localisation de l'entreprise non renseignée

```{r tib_headquarters}
tib_headquarters=tib_fortunes %>% 
  filter(is.na(enterprise_loc)) %>% 
  clean_wikidata_table() %>% 
  group_by(headquarters, headquartersLabel) %>% 
  summarise(n=n()) %>% 
  arrange(desc(n)) %>% 
  na.omit() %>%
  ungroup() %>% 
  mutate(n=1:n(),
         ntot=n(),
         p=n/ntot) %>% 
  mutate(slice=cut(p,seq(0,1,by=0.05))) %>% 
  group_by(slice) %>% 
  nest() 

getloc=function(data){
  list_headquarters=data$headquarters
  tib=spq_init() %>% 
    spq_add("?headquarters wdt:P625 ?headquarters_loc") %>% 
    spq_set(headquarters=list_headquarters) %>% 
    spq_perform()
  return(tib)
}
tib_headquarters=tib_headquarters %>% 
  mutate(data=purrr::map(data,getloc)) %>% 
  unnest(cols=data) %>% 
  ungroup() %>% 
  select(-slice) %>% 
  clean_wikidata_table()

tib_fortunes=tib_fortunes %>% 
   left_join(tib_headquarters,by="headquarters")

```

## Exporte la table

```{r}
tib_fortunes=tib_fortunes %>%
  mutate(total_revenue_year=lubridate::year(total_revenue_date))

tib_fortunes_export=tib_fortunes %>% 
  select(enterprise=enterpriseLabel,
         total_revenue,
         total_revenue_date,
         net_profit,
         total_assets,
         operating_income,
         country=countryLabel,
         headquarters=headquartersLabel,
         enterprise_loc)
write.csv2(tib_fortunes_export,"data/fortunes.csv")
```

# Exhaustivité/qualité des données

## Combien d'entreprises aux USA?

```{r enterprise_USA}
tib_fortunes_USA=tib_fortunes %>% 
  filter(total_revenue_year>2020,
         countryLabel=="United States of America") %>%
  group_by(enterprise,enterpriseLabel) %>% 
  summarise(mean_revenue=mean(total_revenue)) %>% 
  arrange(desc(mean_revenue))
  
```
